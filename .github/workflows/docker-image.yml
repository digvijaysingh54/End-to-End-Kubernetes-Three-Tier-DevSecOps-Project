name: CI Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: 'us-east-1'
      REPOSITORY_URI: ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/
      AWS_ECR_REPO_NAME_FRONTEND: 'frontend-repo' # Replace with your actual ECR repo name for frontend
      AWS_ECR_REPO_NAME_BACKEND: 'backend-repo'   # Replace with your actual ECR repo name for backend

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    # Install Trivy using the official installation script
    - name: Install Trivy
      run: |
        sudo apt-get update -y
        sudo apt-get install -y wget
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install -y trivy

    # Frontend Trivy File Scan
    - name: Trivy File Scan - Frontend
      run: |
        cd Application-Code/frontend
        trivy fs . > trivy_frontend_scan.txt

    # Backend Trivy File Scan
    - name: Trivy File Scan - Backend
      run: |
        cd Application-Code/backend
        trivy fs . > trivy_backend_scan.txt

    # Docker Build & Push - Frontend
    - name: Docker Image Build and Push - Frontend
      run: |
        cd Application-Code/frontend
        docker buildx create --use
        docker buildx build -t $REPOSITORY_URI$AWS_ECR_REPO_NAME_FRONTEND:${{ github.run_number }} --push .

    # Docker Build & Push - Backend
    - name: Docker Image Build and Push - Backend
      run: |
        cd Application-Code/backend
        docker buildx create --use
        docker buildx build -t $REPOSITORY_URI$AWS_ECR_REPO_NAME_BACKEND:${{ github.run_number }} --push .

    # Trivy Image Scan - Frontend
    - name: Trivy Image Scan - Frontend
      run: |
        trivy image $REPOSITORY_URI$AWS_ECR_REPO_NAME_FRONTEND:${{ github.run_number }} > trivy_frontend_image_scan.txt

    # Trivy Image Scan - Backend
    - name: Trivy Image Scan - Backend
      run: |
        trivy image $REPOSITORY_URI$AWS_ECR_REPO_NAME_BACKEND:${{ github.run_number }} > trivy_backend_image_scan.txt
